/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-04-01 03:23:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberDelete_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/memberDelete.css\">\n");
      out.write("    \n");
      out.write("    <script src=\"https://kit.fontawesome.com/47910b9f42.js\" crossorigin=\"anonymous\"></script>\n");
      out.write("    \n");
      out.write("    <title>회원탈퇴</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <div id=\"movieSourcing\">\n");
      out.write("        <div id=\"layout\">\n");
      out.write("            <div id=\"root\">\n");
      out.write("                <header class=\"backpageHeader\">\n");
      out.write("                    <div classs=\"backpageDiv\">\n");
      out.write("                        <a href=\"#\" class=\"backpage\">\n");
      out.write("                            <i class=\"fa-solid fa-chevron-left\" id=\"backpageimg\"></i>\n");
      out.write("                        </a>\n");
      out.write("                    </div>\n");
      out.write("                </header>\n");
      out.write("                <main id=\"contents\">\n");
      out.write("                    <section class=\"delete\">\n");
      out.write("                        <span class=\"top\">회원 탈퇴</span>\n");
      out.write("\n");
      out.write("                    </section>\n");
      out.write("                    <section class=\"infomationbox\">\n");
      out.write("                        <div class=\"info\">\n");
      out.write("                            <div class=\"infobox\">\n");
      out.write("                                <span class=\"bold\">회원 탈퇴 안내</span>\n");
      out.write("                                <span class=\"infocontents\"> \n");
      out.write("                                    \n");
      out.write("                                <br><br>\n");
      out.write("                                회원탈퇴를 신청하기 전에 안내 사항을 꼭 확인해주세요.\n");
      out.write("                                <br><br>\n");
      out.write("                                사용하고 계신 아이디는 탈퇴할 경우 재사용 및 복구가 불가능합니다.\n");
      out.write("                                탈퇴한 아이디는 본인과 타인 모두 재사용 및 복구가 불가하오니 신중하게 선택하시기 바랍니다.\n");
      out.write("                                <br><br>\n");
      out.write("                                탈퇴 후 회원정보 및 개인형 서비스 이용기록은 모두 삭제됩니다.\n");
      out.write("                                회원정보 및 메일, 서비스 이용기록은 모두 삭제되며, 삭제된 데이터는 복구되지 않습니다.\n");
      out.write("                                삭제되는 내용을 확인하시고 필요한 데이터는 미리 백업을 해주세요.\n");
      out.write("                                <br><br>\n");
      out.write("                                탈퇴 후에도 게시판형 서비스에 등록한 게시물은 그대로 남아 있습니다.\n");
      out.write("                                리뷰, 커뮤니티 등에 올린 게시글 및 댓글은 탈퇴 시 자동 삭제되지 않고 그대로 남아 있습니다.\n");
      out.write("                                삭제를 원하는 게시글이 있다면 반드시 탈퇴 전 삭제하시기 바랍니다.\n");
      out.write("                                탈퇴 후에는 회원정보가 삭제되어 본인 여부를 확인할 수 있는 방법이 없어, 게시글을 임의로 삭제해드릴 수 없습니다.\n");
      out.write("                                <br><br>\n");
      out.write("                                탈퇴 후에는 해당 아이디로 다시 가입할 수 없으며 아이디와 데이터는 복구할 수 없습니다.\n");
      out.write("                                게시판형 서비스에 남아 있는 게시글은 탈퇴 후 삭제할 수 없습니다.\n");
      out.write("                                </span>\n");
      out.write("                                <br><br><br>\n");
      out.write("           <!-- 폼 임의추가  -->\n");
      out.write("                       <form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/secession\" method=\"POST\" name=\"myPage-form\" onsubmit=\"return secessionValidate()\" >\n");
      out.write("                                <input type=\"checkbox\" id=\"deleteid\"> <span class=\"deco\">안내 사항을 모두 확인하였으며, 이에 동의합니다.</span>\n");
      out.write("                                <br><br>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </section>\n");
      out.write("                   \n");
      out.write("                    <section class=\"passwordbox\">\n");
      out.write("                        <div>\n");
      out.write("                        <!-- 인풋 아이디 네임  임의추가  -->\n");
      out.write("                            <input type=\"password\" name=\"memberPw\" id=\"memberPw\" class=\"currentPw\" placeholder=\"비밀번호 확인\">\n");
      out.write("                        </div>\n");
      out.write("                    </section>\n");
      out.write("                    <hr class=\"line\" color=\"gray\">\n");
      out.write("                    <section class=\"savebox\">\n");
      out.write("                        <button><span>회원탈퇴</span></button>\n");
      out.write("                          </form>\n");
      out.write("                    </section>\n");
      out.write("                </main>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("    </div>\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/member/myPage.js\"></script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
